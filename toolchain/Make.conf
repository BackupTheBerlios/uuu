# these control where the resulting programs will be placed when 'make install'
# is run.

PREFIX = /usr/local
BINDIR = $(PREFIX)/bin
LIBDIR = $(PREFIX)/lib
INCDIR = $(PREFIX)/include


# this is a declaration of how cool your computer is. If you have a modern cpu
# like an r12000, EV6, Itanium, G5, or Athlon 64, set this to 64. If you are
# stuck on a 20+ year old ia32 like most people, say 32.
#
# currently this modifies only the printf modifier used to print fixed width
# integer types such as uint64_t.

PLATFORM_BITTAGE = 64


# this indicates the byte order of your platform. All IBM compatibles should say
# 'little' here. Other non-intel platforms are split between 'little' and 'big'.

PLATFORM_BYTEORDER = big

# if defined, these will tell the build system where to find the udbfslib
# include and library files.

UDBFSLIB_INCLUDES = /usr/local/include
UDBFSLIB_LIBRARIES = /usr/local/lib


# set this to on to include <dmalloc.h> in all files for memory debugging
DMALLOC = off

# printf modifier fragment used to print uint64_t. On 32 bit archs, uint64_t is
# a 'long long int', so this should be '"ll"'. On 64 bit archs it is usually
# 'long int', so this should be '"l"'. Note that the value must be in double
# quotes as it must parse as a C string constant.

ifeq ($(PLATFORM_BITTAGE),32)
  UINT64_FORMAT = "ll"
else
  ifeq ($(PLATFORM_BITTAGE),64)
    UINT64_FORMAT = "l"
  else
    $(error PLATFORM_BITTAGE must be either 32 or 64)
  endif
endif


ifeq ($(DMALLOC),on)
CFLAGS += -DDMALLOC
endif

ifneq ($(UINT64_FORMAT),"ll")
CFLAGS += -DUINT64_FORMAT='$(UINT64_FORMAT)'
endif

# vim: syntax=make
